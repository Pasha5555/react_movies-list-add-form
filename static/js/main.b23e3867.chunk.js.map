{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","handleChange","e","target","name","value","setState","submitMovie","preventDefault","newMovie","props","addMovie","this","action","method","onSubmit","htmlFor","type","placeholder","id","onChange","required","rows","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b23e3867.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  submitMovie = (e) => {\n    e.preventDefault();\n    const { title, description, imgUrl, imdbId, imdbUrl } = this.state;\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.props.addMovie(newMovie);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  render() {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    return (\n      <form\n        action=\"\"\n        method=\"POST\"\n        className=\"movie\"\n        onSubmit={this.submitMovie}\n      >\n        <label htmlFor=\"input-title\">\n          <b>Title: </b>\n        </label>\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Input title*\"\n          id=\"input-title\"\n          className=\"movie__inputs\"\n          value={title}\n          onChange={this.handleChange}\n          required\n        />\n        <br />\n\n        <label\n          htmlFor=\"input-description\"\n          className=\"movie__label-description\"\n        >\n          <b>Description: </b>\n        </label>\n        <textarea\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Input description*\"\n          id=\"input-description\"\n          className=\"movie__textarea\"\n          value={description}\n          onChange={this.handleChange}\n          rows=\"3\"\n        />\n        <br />\n\n        <label htmlFor=\"input-imageUrl\">\n          <b>Image url: </b>\n        </label>\n        <input\n          type=\"text\"\n          name=\"imgUrl\"\n          placeholder=\"Input image url*\"\n          id=\"input-imageUrl\"\n          className=\"movie__inputs\"\n          value={imgUrl}\n          onChange={this.handleChange}\n          required\n        />\n        <br />\n\n        <label htmlFor=\"input-imdbUrl\">\n          <b>IMDB url: </b>\n        </label>\n        <input\n          type=\"text\"\n          name=\"imdbUrl\"\n          placeholder=\"Input IMDB url*\"\n          id=\"input-imdbUrl\"\n          className=\"movie__inputs\"\n          value={imdbUrl}\n          onChange={this.handleChange}\n          required\n        />\n        <br />\n\n        <label htmlFor=\"input-imdbId\">\n          <b>IMDB id: </b>\n        </label>\n        <input\n          type=\"text\"\n          name=\"imdbId\"\n          placeholder=\"Input IMDB id*\"\n          id=\"input-imdbId\"\n          className=\"movie__inputs\"\n          value={imdbId}\n          onChange={this.handleChange}\n          required\n        />\n        <br />\n\n        <button\n          type=\"submit\"\n          className=\"movie__submit\"\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}